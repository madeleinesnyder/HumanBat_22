function [Sammon_Mapping] = HumanBat_SammonMapping(batdate,logger,unit)

% Calculate the Sammon Mapping for all states

exp_data_path = strcat('/home/madeleine/mnt/server2/users/KQMS/HumanBat/2992814650/processed/',num2str(batdate),'/');

% Load Human, Bat1 and Bat2 data
load(strcat(exp_data_path,'ciholas/aligned_bat_position_data.mat'));     %ciholas_r
load(strcat(exp_data_path,'ciholas/aligned_human_position_data.mat'));   %human_t
load(strcat(exp_data_path,'cortex/clustered_cortex_flights.mat'));       %cortex_flight.trajectoriesContinuous
load(strcat(exp_data_path,'ciholas/pruned_resorted_trimmed_ciholas_bat_final_flight_structure.mat'));
load(strcat(exp_data_path,'ciholas/ciholas_bat_final_flight_structure.mat'));

%% Find all the time in the session when the bat was not moving
still_time = []; still_idxs = [];
for i=3:length(ciholas_flight_struct)-1
    landing_time = ciholas_flight_struct{i}.fend+120;
    next_takeoff = ciholas_flight_struct{i+1}.fstart-120;
    still_idxs = [still_idxs,[landing_time:next_takeoff]];
    still_time = [still_time;ciholas_r(landing_time:next_takeoff,:)];
    B_points(i) = landing_time; 
end

figure(); hold on; xlim([-2900 2900]); ylim([-2600 2600]); zlim([0 2300]); scatter3(still_time(:,1),still_time(:,2),still_time(:,3))
figure(); hold on; xlim([-2900 2900]); ylim([-2600 2600]); zlim([0 2300]); scatter3(ciholas_r(still_idxs,1),ciholas_r(still_idxs,2),ciholas_r(still_idxs,3)); 


%% Different approach

% Find all times when Madeleine was in valence of one of the tripods 
M_tripods = [-2250, 560, 720;       % Tripod 1 (estimate)
             -1590, 2065, 775;      % Tripod 2
             2040,1640,636;         % Tripod 3
             2066,120,700;          % Tripod 4
             2077, -1550,730;       % Tripod 5
             360,-2080,660;         % Tripod 6
             55,-61,723;            % Tripod 7 (high squat)
             135,-220,325];         % Tripod 7 (sitting on floor)

human_m = squeeze(human_r(:,:,4));
human_k = squeeze(human_r(:,:,3));
r=300; % Radius of landing sphere for acceptable
within_tripod_sphere_idxs_m = [];
for i=1:length(human_m)
    x = human_m(i,1); y = human_m(i,2); z = human_m(i,3);
    for j=1:length(M_tripods)    
        if j==7
            r=200; % Radius of landing sphere for acceptable
        elseif j==8
            r=200; % Radius of landing sphere for acceptable
        else
            r=200; % Radius of landing sphere for acceptable
        end
        x0 = M_tripods(j,1); y0 = M_tripods(j,2); z0 = M_tripods(j,3);
        mask = (x-x0).^2+(y-y0).^2+(z-z0).^2<=r^2;
        if mask == 1
            within_tripod_sphere_idxs_m = [within_tripod_sphere_idxs_m,i];
        end
    end
end

% Define Kevin's tripod height
for i=1:length(M_tripods)
    K_tripods(i,:) = [M_tripods(i,1:2),M_tripods(i,3)+50];
end
within_tripod_sphere_idxs_k = [];
for i=1:length(human_k)
    x = human_k(i,1); y = human_k(i,2); z = human_k(i,3);
    for j=1:length(K_tripods)    
        if j==7
            r=200; % Radius of landing sphere for acceptable
        elseif j==8
            r=200; % Radius of landing sphere for acceptable
        else
            r=200; % Radius of landing sphere for acceptable
        end
        x0 = K_tripods(j,1); y0 = K_tripods(j,2); z0 = K_tripods(j,3);
        mask = (x-x0).^2+(y-y0).^2+(z-z0).^2<=r^2;
        if mask == 1
            within_tripod_sphere_idxs_k = [within_tripod_sphere_idxs_k,i];
        end
    end
end

% Now nest and see when all points are not moving
full_set = [];
for i=1:length(within_tripod_sphere_idxs_m)
    if ismember(within_tripod_sphere_idxs_m(i),still_idxs)
        full_set = [full_set,within_tripod_sphere_idxs_m(i)];  
    end
end
full_set_final = [];
for i=1:length(within_tripod_sphere_idxs_k)
    if ismember(within_tripod_sphere_idxs_k(i),full_set)
        full_set_final = [full_set_final,within_tripod_sphere_idxs_k(i)];  
    end
end

%% Plot all points
figure(); hold on; xlim([-2900 2900]); ylim([-2600 2600]); zlim([0 2300]); title("All Kept points");
scatter3(ciholas_r(full_set_final,1),ciholas_r(full_set_final,2),ciholas_r(full_set_final,3),'k');
scatter3(human_r(full_set_final,1,4),human_r(full_set_final,2,4),human_r(full_set_final,3,4),'b');
scatter3(human_r(full_set_final,1,3),human_r(full_set_final,2,3),human_r(full_set_final,3,3),'r');
hold off;

%% Create a 12 x timepoint matrix with mdeleine, kevin, bat1, bat2
N = [squeeze(human_r(full_set_final,:,4)),squeeze(human_r(full_set_final,:,3)),ciholas_r(full_set_final,:)];
N_ds = downsample(N,10);

f_ds = downsample(full_set_final,10);
N_ds = [squeeze(human_r(f_ds,:,4)),squeeze(human_r(f_ds,:,3)),ciholas_r(f_ds,:)];

figure(); hold on; xlim([-2900 2900]); ylim([-2600 2600]); zlim([0 2300]); title("All Kept points, downsampled");
scatter3(N_ds(:,1),N_ds(:,2),N_ds(:,3),'k');
scatter3(N_ds(:,4),N_ds(:,5),N_ds(:,6),'b');
scatter3(N_ds(:,7),N_ds(:,8),N_ds(:,9),'r');
hold off;

% Make dissimilarity matrix
N_dist = pdist(N_ds);

% Sammon Mapping
%Sammon = mdscale(N_dist,2,'Criterion','sammon');

% Shepard's plot
%distances1 = pdist(Sammon);
%figure(); hold on; plot(N_dist,distances1,'bo',[0 200],[0 200],'k--'); hold off;

% In 2d
[Y, stress, disparities] = mdscale(N_dist,2,'Criterion','sammon');
save(strcat(exp_data_path,'/Sammon/Y.mat'),'Y');  save(strcat(exp_data_path,'/Sammon/stress.mat'),'stress');  save(strcat(exp_data_path,'/Sammon/disparities.mat'),'disparities'); 
figure(); plot(Y(:,1),Y(:,2),'.'); 

%% Assign spikes to timepoints included in the Sammon mapping

load(strcat(exp_data_path,'/ephys/logger',num2str(logger),'/extracted_data/B_ephys_data_aligned.mat'));

% For a given unit, plot how it is distributed in the Sammon mapping states
% (RATE?)
unit=7;     s = B_ephys_data.TT_unit(unit).AlignedTimestamps/1e6*120;
for i=1:length(f_ds)
    ts = full_set_final(i);
    ts_s = ts/120;
    [B,ephys_idxs_in_range] = find(ts_s-0.1 < s & s < ts_s+0.1);
    if isempty(ephys_idxs_in_range)
        full_set_final_ephys_mask(i) = 0;
    else
        full_set_final_ephys_mask(i) = 1;
    end
end
%%
strcat("Unit fired ",num2str(sum(full_set_final_ephys_mask))," times during rest periods")
figure(); hold on; title(strcat("Unit ",num2str(unit)," plotted onto Sammon Mapping"));
plot(Y(:,1),Y(:,2),'.');
for i=1:length(Y)
    if full_set_final_ephys_mask(i)==1
        scatter(Y(i,1),Y(i,2),'r.')
    end
end
hold off;



